class Solution {
public:
    int length(ListNode* head){
        int c=0;
        ListNode* temp= head;
        while(temp!=NULL){
            temp= temp->next;
            c++;
        }
        return c;
    }
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int d=0;
        ListNode* ptr1;
        ListNode* ptr2;
        int l1= length(headA);
        int l2= length(headB);
        if(l1>l2){
            d=l1-l2;
            ptr1= headA;
            ptr2=headB;
        }
        else{
            d=l2-l1;
            ptr1= headB;
            ptr2=headA; 
        }
        while(d){
            if(ptr1==NULL) return NULL;
            d--;
            ptr1= ptr1->next;
        }
        while(ptr1!=NULL && ptr2!=NULL){
         if(ptr1==ptr2)     return ptr1;
            ptr1=ptr1->next;
            ptr2= ptr2->next;
        }
        return NULL;
    }
};
