class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
      if(!root) return 0;
        int width=0;
        queue<pair<TreeNode*, int>>q;
        q.push({root,0});
        while(!q.empty()){
            int size= q.size();
            int min=q.front().second;  
            int first,last;
            for(int i=0;i<size;i++){
                int curindex= q.front().second-min;
                TreeNode* node = q.front().first;
                q.pop();
                if(i==0) first= curindex;
                if(i==size-1) last= curindex;
                if(node->left) q.push({node->left,(long long)curindex*2+1});
                 if(node->right) q.push({node->right,(long long)curindex*2+2});
            }
            width= max(width,last-first+1);
        }
            
    return width;
    }
};
